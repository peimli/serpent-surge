services:
  frontend:
    image: nginx:alpine
    container_name: frontend
    volumes:
      - /home/ubuntu/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/ubuntu/frontend:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      mkdir -p /var/log/letsencrypt
      while :; do
        certbot renew --webroot -w /usr/share/nginx/html >> /var/log/letsencrypt/renew.log 2>&1
        sleep 12h
      done
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /app
    environment:
      MYSQL_HOST: "{{ rds_endpoint.value.split(':')[0] }}"
      MYSQL_PORT: "{{ rds_endpoint.value.split(':')[1] }}"
      MYSQL_USER: "{{ db_user.value }}"
      MYSQL_PASSWORD: "{{ db_password.value }}"
      MYSQL_DATABASE: "{{ db_name.value }}"
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  letsencrypt:
    external: true
    name: letsencrypt
services:
  frontend:
    image: nginx:alpine
    container_name: frontend
    volumes:
      - /home/ubuntu/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/ubuntu/frontend:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      mkdir -p /var/log/letsencrypt
      while :; do
        certbot renew --webroot -w /usr/share/nginx/html >> /var/log/letsencrypt/renew.log 2>&1
        sleep 12h
      done
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /app
    environment:
      MYSQL_HOST: "{{ rds_endpoint.value.split(':')[0] }}"
      MYSQL_PORT: "{{ rds_endpoint.value.split(':')[1] }}"
      MYSQL_USER: "{{ db_user.value }}"
      MYSQL_PASSWORD: "{{ db_password.value }}"
      MYSQL_DATABASE: "{{ db_name.value }}"
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  letsencrypt:
    external: true
    name: letsencrypt
services:
  frontend:
    image: nginx:alpine
    container_name: frontend
    volumes:
      - /home/ubuntu/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/ubuntu/frontend:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      mkdir -p /var/log/letsencrypt
      while :; do
        certbot renew --webroot -w /usr/share/nginx/html >> /var/log/letsencrypt/renew.log 2>&1
        sleep 12h
      done
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /app
    environment:
      MYSQL_HOST: "{{ rds_endpoint.value.split(':')[0] }}"
      MYSQL_PORT: "{{ rds_endpoint.value.split(':')[1] }}"
      MYSQL_USER: "{{ db_user.value }}"
      MYSQL_PASSWORD: "{{ db_password.value }}"
      MYSQL_DATABASE: "{{ db_name.value }}"
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  letsencrypt:
    external: true
    name: letsencrypt
services:
  frontend:
    image: nginx:alpine
    container_name: frontend
    volumes:
      - /home/ubuntu/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /home/ubuntu/frontend:/usr/share/nginx/html:ro
      - letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    entrypoint: ["/bin/sh","-c"]
    command: |
      set -e
      mkdir -p /var/log/letsencrypt
      while :; do
        certbot renew --webroot -w /usr/share/nginx/html >> /var/log/letsencrypt/renew.log 2>&1
        sleep 12h
      done
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - frontend
    restart: unless-stopped

  backend:
    build:
      context: ./backend
    container_name: backend
    working_dir: /app
    environment:
      MYSQL_HOST: "{{ rds_endpoint.value.split(':')[0] }}"
      MYSQL_PORT: "{{ rds_endpoint.value.split(':')[1] }}"
      MYSQL_USER: "{{ db_user.value }}"
      MYSQL_PASSWORD: "{{ db_password.value }}"
      MYSQL_DATABASE: "{{ db_name.value }}"
    ports:
      - "3000:3000"
    restart: unless-stopped

volumes:
  letsencrypt:
    external: true
    name: letsencrypt

